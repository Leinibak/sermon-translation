# ===========================================
# 1️⃣ Build Stage - Python 환경 준비
# ===========================================
FROM python:3.14-slim AS builder

# 작업 디렉토리 설정
WORKDIR /app

# 시스템 필수 패키지 설치 (빌드용)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# requirements.txt 복사 및 설치
COPY requirements.txt ./
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# ===========================================
# 2️⃣ Production Stage - 실제 런타임 환경
# ===========================================
FROM python:3.14-slim

WORKDIR /app

# 런타임에 필요한 최소 패키지만 설치
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# builder 단계에서 설치한 패키지 복사
COPY --from=builder /usr/local /usr/local

# 소스 복사
COPY . .

# entrypoint 권한 부여
RUN chmod +x /app/entrypoint.sh

# 포트 노출
EXPOSE 8000

# 환경 변수 설정
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DJANGO_SETTINGS_MODULE=backend.config.settings

# 실행 명령 (배포용)
CMD ["/app/entrypoint.sh"]
